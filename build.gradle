plugins {
	id 'org.springframework.boot' version '2.3.10.RELEASE'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'org.flywaydb.flyway' version "7.8.1"
	id 'no.nils.wsdl2java' version "0.10"
}

group = 'ru.ds.education'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'ma.glasnost.orika:orika-core:1.5.4'
	implementation 'io.springfox:springfox-swagger2:2.9.2'
	implementation 'org.flywaydb:flyway-core'
	implementation 'io.springfox:springfox-swagger-ui:2.9.2'
	implementation 'junit:junit:4.13.1'
	runtimeOnly 'org.postgresql:postgresql'
	compileOnly 'org.projectlombok:lombok:1.18.20'
	annotationProcessor 'org.projectlombok:lombok:1.18.20'

	compile('org.springframework.boot:spring-boot-starter-activemq')
	compile('org.apache.activemq:activemq-broker')
	compile('com.fasterxml.jackson.core:jackson-databind')
	compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310')

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

flyway{
	url = 'jdbc:postgresql://localhost:5432/currencydb'
	user = 'currencyuser'
	password = 'letstry'
	schemas = ['public']
}

test {
	useJUnitPlatform()
}
wsdl2java {
	System.setProperty('javax.xml.accessExternalSchema', 'all')
	System.setProperty('javax.xml.accessExternalDTD', 'all')
	generatedWsdlDir = file("${projectDir}/src/main/resources/service")
	wsdlsToGenerate = [
			[
					'-b', 'http://www.w3.org/2001/XMLSchema.xsd',
					'http://www.cbr.ru/DailyInfoWebServ/DailyInfo.asmx?WSDL'
			],
	]
	encoding = "UTF-8"
}
compileJava.dependsOn wsdl2java